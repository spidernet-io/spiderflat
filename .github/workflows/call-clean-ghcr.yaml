name: Call Clean GHCR image

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      older_than:
        required: false
        type: string
      tag_regex:
        required: false
        type: string
    secrets:
      WELAN_PAT:
        required: true
  workflow_dispatch:
    inputs:
      image_name:
        description: "image name"
        required: true
        default: "spiderpool-controller-ci"
      older_than:
        description: "Minimum days of a version before pruned"
        required: true
        default: "0"
      keep_last:
        description: "exclude count of most recent images"
        required: true
        default: "1"
      dry_run:
        description: "dry run (true|false)"
        required: true
        default: "true"

jobs:
  purge-image:
    name: Delete image from ghcr.io
    runs-on: ubuntu-latest
    steps:
      - name: Get Arg
        id: args
        run: |
          # weizhoublue/github_action_test
          repo=${{ github.repository }}
          # github_action_test
          repo=${repo#*/}
          echo ::set-output name=repo_name::${repo}
          if ${{ inputs.image_name != '' }} ; then
              echo "call by workflow_call"
              echo ::set-output name=image_name::${{ inputs.image_name }}
              echo ::set-output name=tag_regex::${{ github.event.inputs.tag_regex }}
              echo ::set-output name=older_than::${{ inputs.older_than }}
              echo ::set-output name=dry_run::false
              echo ::set-output name=keep_last::0
          elif ${{ github.event_name == 'workflow_dispatch' }} ; then
              echo "call by workflow_dispatch"
              echo ::set-output name=image_name::${{ github.event.inputs.image_name }}
              echo ::set-output name=tag_regex::
              echo ::set-output name=older_than::${{ github.event.inputs.older_than }}
              echo ::set-output name=dry_run::${{ github.event.inputs.dry_run }}
              echo ::set-output name=keep_last::${{ github.event.inputs.keep_last }}
          else
              echo "unexpected event: ${{ github.event_name }}"
              exit 1
          fi

      - name: Delete CI image
        if: ${{ steps.args.outputs.tag_regex != '' }}
        uses: vlaurin/action-ghcr-prune@v0.4.0
        with:
          token: ${{ secrets.WELAN_PAT }}
          organization: ${{ github.repository_owner }}
          container: ${{ steps.args.outputs.repo_name }}/${{ steps.args.outputs.image_name }}
          dry-run: ${{ steps.args.outputs.dry_run }}
          older-than: ${{ steps.args.outputs.older_than }}
          keep-last: ${{ steps.args.outputs.keep_last }}
          untagged: true
          tag-regex: ${{ steps.args.outputs.tag_regex }}

      - name: Delete CI image
        if: ${{ steps.args.outputs.tag_regex == '' }}
        uses: vlaurin/action-ghcr-prune@v0.4.0
        with:
          token: ${{ secrets.WELAN_PAT }}
          organization: ${{ github.repository_owner }}
          container: ${{ steps.args.outputs.repo_name }}/${{ steps.args.outputs.image_name }}
          dry-run: ${{ steps.args.outputs.dry_run }}
          older-than: ${{ steps.args.outputs.older_than }}
          keep-last: ${{ steps.args.outputs.keep_last }}
          untagged: true
