{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About spiderpool","title":"About"},{"location":"#about","text":"spiderpool","title":"About"},{"location":"cmdref/spiderpool-agent/","text":"spiderpool-agent CLI spiderpool-agent daemon Synopsis run spiderpool agent daemon Options --config-dir string config file path (default /tmp/spiderpool/config-map) --ipam-config-dir string config file for ipam plugin ENV SPIDERPOOL_LOG_LEVEL log level (DEBUG|INFO|ERROR) SPIDERPOOL_ENABLED_PPROF enable pprof (true|false) SPIDERPOOL_ENABLED_METRIC enable metrics (true|false) SPIDERPOOL_METRIC_HTTP_PORT metric port (default to 5711) SPIDERPOOL_HTTP_PORT http port (default to 5710) spiderpool-agent shutdown Synopsis notify to stop spiderpool-agent daemon spiderpool-agent metric get local metric Options --port string http server port of local metric (default to 5711)","title":"spiderpool-agent"},{"location":"cmdref/spiderpool-agent/#spiderpool-agent","text":"CLI","title":"spiderpool-agent"},{"location":"cmdref/spiderpool-agent/#spiderpool-agent-daemon","text":"","title":"spiderpool-agent daemon"},{"location":"cmdref/spiderpool-agent/#synopsis","text":"run spiderpool agent daemon","title":"Synopsis"},{"location":"cmdref/spiderpool-agent/#options","text":"--config-dir string config file path (default /tmp/spiderpool/config-map) --ipam-config-dir string config file for ipam plugin","title":"Options"},{"location":"cmdref/spiderpool-agent/#env","text":"SPIDERPOOL_LOG_LEVEL log level (DEBUG|INFO|ERROR) SPIDERPOOL_ENABLED_PPROF enable pprof (true|false) SPIDERPOOL_ENABLED_METRIC enable metrics (true|false) SPIDERPOOL_METRIC_HTTP_PORT metric port (default to 5711) SPIDERPOOL_HTTP_PORT http port (default to 5710)","title":"ENV"},{"location":"cmdref/spiderpool-agent/#spiderpool-agent-shutdown","text":"","title":"spiderpool-agent shutdown"},{"location":"cmdref/spiderpool-agent/#synopsis_1","text":"notify to stop spiderpool-agent daemon","title":"Synopsis"},{"location":"cmdref/spiderpool-agent/#spiderpool-agent-metric","text":"get local metric","title":"spiderpool-agent metric"},{"location":"cmdref/spiderpool-agent/#options_1","text":"--port string http server port of local metric (default to 5711)","title":"Options"},{"location":"cmdref/spiderpool-controller/","text":"spiderpool-controller CLI spiderpool-controller daemon Synopsis run spiderpool controller daemon Options --config-dir string config file path (default /tmp/spiderpool/config-map) ENV SPIDERPOOL_LOG_LEVEL log level (DEBUG|INFO|ERROR) SPIDERPOOL_ENABLED_PPROF enable pprof (true|false) SPIDERPOOL_ENABLED_METRIC enable metrics (true|false) SPIDERPOOL_METRIC_HTTP_PORT metric port (default to 5721) SPIDERPOOL_GC_IPPOOL_ENABLED enable GC ip in ippool, prior to other GC environment (true|false, default to true) SPIDERPOOL_GC_TERMINATING_POD_IP_ENABLED enable GC ip of terminating pod whose graceful-time times out (true|false, default to true) SPIDERPOOL_GC_TERMINATING_POD_IP_DELAY delay to GC ip after graceful-time times out (second, default to 0) SPIDERPOOL_GC_EVICTED_POD_IP_ENABLED enable GC ip of evicted pod (true|false, default to true) SPIDERPOOL_GC_EVICTED_POD_IP_DELAY delay to GC ip of evicted pod (second, default to 0) SPIDERPOOL_HTTP_PORT http port (default to 5710) spiderpool-controller shutdown Synopsis notify to stop spiderpool-controller daemon spiderpool-controller metric get local metric Options --port string http server port of local metric (default to 5721) spiderpool-controller status show status: (1) whether local is controller leader (2)... Options --port string http server port of local metric (default to 5720)","title":"spiderpool-controller"},{"location":"cmdref/spiderpool-controller/#spiderpool-controller","text":"CLI","title":"spiderpool-controller"},{"location":"cmdref/spiderpool-controller/#spiderpool-controller-daemon","text":"","title":"spiderpool-controller daemon"},{"location":"cmdref/spiderpool-controller/#synopsis","text":"run spiderpool controller daemon","title":"Synopsis"},{"location":"cmdref/spiderpool-controller/#options","text":"--config-dir string config file path (default /tmp/spiderpool/config-map)","title":"Options"},{"location":"cmdref/spiderpool-controller/#env","text":"SPIDERPOOL_LOG_LEVEL log level (DEBUG|INFO|ERROR) SPIDERPOOL_ENABLED_PPROF enable pprof (true|false) SPIDERPOOL_ENABLED_METRIC enable metrics (true|false) SPIDERPOOL_METRIC_HTTP_PORT metric port (default to 5721) SPIDERPOOL_GC_IPPOOL_ENABLED enable GC ip in ippool, prior to other GC environment (true|false, default to true) SPIDERPOOL_GC_TERMINATING_POD_IP_ENABLED enable GC ip of terminating pod whose graceful-time times out (true|false, default to true) SPIDERPOOL_GC_TERMINATING_POD_IP_DELAY delay to GC ip after graceful-time times out (second, default to 0) SPIDERPOOL_GC_EVICTED_POD_IP_ENABLED enable GC ip of evicted pod (true|false, default to true) SPIDERPOOL_GC_EVICTED_POD_IP_DELAY delay to GC ip of evicted pod (second, default to 0) SPIDERPOOL_HTTP_PORT http port (default to 5710)","title":"ENV"},{"location":"cmdref/spiderpool-controller/#spiderpool-controller-shutdown","text":"","title":"spiderpool-controller shutdown"},{"location":"cmdref/spiderpool-controller/#synopsis_1","text":"notify to stop spiderpool-controller daemon","title":"Synopsis"},{"location":"cmdref/spiderpool-controller/#spiderpool-controller-metric","text":"get local metric","title":"spiderpool-controller metric"},{"location":"cmdref/spiderpool-controller/#options_1","text":"--port string http server port of local metric (default to 5721)","title":"Options"},{"location":"cmdref/spiderpool-controller/#spiderpool-controller-status","text":"show status: (1) whether local is controller leader (2)...","title":"spiderpool-controller status"},{"location":"cmdref/spiderpool-controller/#options_2","text":"--port string http server port of local metric (default to 5720)","title":"Options"},{"location":"cmdref/spiderpoolctl/","text":"spiderpoolctl CLI for debug spiderpoolctl gc trigger GC request to spiderpool-controller --address string [optional] address for spider-controller (default to service address) spiderpoolctl ip show show pod who is taking this ip Options --ip string [required] ip spiderpoolctl ip release try to release ip Options --ip string [optional] ip --force [optional] force release ip spiderpoolctl ip set set ip to be taken by a pod , this will update ippool and workloadendpoint resource Options --ip string [required] ip --pod string [required] pod name --namespace string [required] pod namespace --containerid string [required] pod container id --node string [required] the node name who the pod locates --interface string [required] pod interface who taking effect the ip","title":"spiderpoolctl"},{"location":"cmdref/spiderpoolctl/#spiderpoolctl","text":"CLI for debug","title":"spiderpoolctl"},{"location":"cmdref/spiderpoolctl/#spiderpoolctl-gc","text":"trigger GC request to spiderpool-controller --address string [optional] address for spider-controller (default to service address)","title":"spiderpoolctl gc"},{"location":"cmdref/spiderpoolctl/#spiderpoolctl-ip-show","text":"show pod who is taking this ip","title":"spiderpoolctl ip show"},{"location":"cmdref/spiderpoolctl/#options","text":"--ip string [required] ip","title":"Options"},{"location":"cmdref/spiderpoolctl/#spiderpoolctl-ip-release","text":"try to release ip","title":"spiderpoolctl ip release"},{"location":"cmdref/spiderpoolctl/#options_1","text":"--ip string [optional] ip --force [optional] force release ip","title":"Options"},{"location":"cmdref/spiderpoolctl/#spiderpoolctl-ip-set","text":"set ip to be taken by a pod , this will update ippool and workloadendpoint resource","title":"spiderpoolctl ip set"},{"location":"cmdref/spiderpoolctl/#options_2","text":"--ip string [required] ip --pod string [required] pod name --namespace string [required] pod namespace --containerid string [required] pod container id --node string [required] the node name who the pod locates --interface string [required] pod interface who taking effect the ip","title":"Options"},{"location":"concepts/arch/","text":"architect","title":"architect"},{"location":"concepts/arch/#architect","text":"","title":"architect"},{"location":"concepts/crd/","text":"CRD ippool CRD ippool CRD workloadendpoint CRD reservedip CRD","title":"CRD"},{"location":"concepts/crd/#crd","text":"","title":"CRD"},{"location":"concepts/crd/#ippool-crd","text":"","title":"ippool CRD"},{"location":"concepts/crd/#ippool-crd_1","text":"","title":"ippool CRD"},{"location":"concepts/crd/#workloadendpoint-crd","text":"","title":"workloadendpoint CRD"},{"location":"concepts/crd/#reservedip-crd","text":"","title":"reservedip CRD"},{"location":"contributing/development/changelog/","text":"changelog how automatically generate the version changelog 1 all PR should be labeled with \"pr/release/***\" and could be merged 2 when push a tag, automatically create the changelog the changelog content include: (1) New Features: it include all PR labeled with \"pr/release/feature-new\" (2) Changed Features: it include all PR labeled with \"pr/release/feature-changed\" (3) Fixes: it include all PR labeled with \"pr/release/bug\" (4) all historical commit within this version 3 the changelog will be attached to github RELEASE and submit to /changelogs of branch 'github_pages'","title":"changelog"},{"location":"contributing/development/changelog/#changelog","text":"","title":"changelog"},{"location":"contributing/development/changelog/#how-automatically-generate-the-version-changelog","text":"","title":"how automatically generate the version changelog"},{"location":"contributing/development/changelog/#1-all-pr-should-be-labeled-with-prrelease-and-could-be-merged","text":"","title":"1 all PR should be labeled with \"pr/release/***\" and could be merged"},{"location":"contributing/development/changelog/#2-when-push-a-tag-automatically-create-the-changelog","text":"the changelog content include: (1) New Features: it include all PR labeled with \"pr/release/feature-new\" (2) Changed Features: it include all PR labeled with \"pr/release/feature-changed\" (3) Fixes: it include all PR labeled with \"pr/release/bug\" (4) all historical commit within this version","title":"2 when push a tag, automatically create the changelog"},{"location":"contributing/development/changelog/#3-the-changelog-will-be-attached-to-github-release-and-submit-to-changelogs-of-branch-github_pages","text":"","title":"3 the changelog will be attached to github RELEASE and submit to /changelogs of branch 'github_pages'"},{"location":"contributing/development/chart/","text":"Chart Management the '/' of branch 'github_pages' is used as github page each version of chart package will be automatically created by CI, they will be pushed to '/chart' of branch 'github_pages'. the '/index.yaml' of branch 'github_pages' will also be updated by CI. so, you could use following command to get the chart helm repo add spiderpool https://spidernet-io.github.io/spiderpool","title":"Chart Management"},{"location":"contributing/development/chart/#chart-management","text":"the '/' of branch 'github_pages' is used as github page each version of chart package will be automatically created by CI, they will be pushed to '/chart' of branch 'github_pages'. the '/index.yaml' of branch 'github_pages' will also be updated by CI. so, you could use following command to get the chart helm repo add spiderpool https://spidernet-io.github.io/spiderpool","title":"Chart Management"},{"location":"contributing/development/daily_build/","text":"daily smoke build CI image With cache acceleration, build two ci image and push to ghcr (1) ****-ci:${ref} : the normal image (2) ****-ci:${ref}-rate : image who turns on 'go race' and 'deadlock detect' the CI will clean ci images at interval","title":"daily smoke"},{"location":"contributing/development/daily_build/#daily-smoke","text":"","title":"daily smoke"},{"location":"contributing/development/daily_build/#build-ci-image","text":"With cache acceleration, build two ci image and push to ghcr (1) ****-ci:${ref} : the normal image (2) ****-ci:${ref}-rate : image who turns on 'go race' and 'deadlock detect' the CI will clean ci images at interval","title":"build CI image"},{"location":"contributing/development/github_pages/","text":"github pages the branch 'github_pages' is set as github page it is used as chart registry chart package of each version is stored on '/charts' and '/index.yaml' will be updated it is used as documentation site documentation is stored on '/docs' for changelog changelog is stored on '/changelogs'","title":"github pages"},{"location":"contributing/development/github_pages/#github-pages","text":"the branch 'github_pages' is set as github page","title":"github pages"},{"location":"contributing/development/github_pages/#it-is-used-as-chart-registry","text":"chart package of each version is stored on '/charts' and '/index.yaml' will be updated","title":"it is used as chart registry"},{"location":"contributing/development/github_pages/#it-is-used-as-documentation-site","text":"documentation is stored on '/docs'","title":"it is used as documentation site"},{"location":"contributing/development/github_pages/#for-changelog","text":"changelog is stored on '/changelogs'","title":"for changelog"},{"location":"contributing/development/issue/","text":"issue manager if an issue lasts stale longer than 60 days, label it with \"issue/stale\" and then close it after 14 days","title":"issue manager"},{"location":"contributing/development/issue/#issue-manager","text":"if an issue lasts stale longer than 60 days, label it with \"issue/stale\" and then close it after 14 days","title":"issue manager"},{"location":"contributing/development/pullrequest/","text":"PR Management after submitting a pull request, the reviewer is assigned by the CODEOWNERS. if a PR lasts stale longer than 60 days, label it with \"pr/stale\" and then close it after 14 days a PR may trigger following workflows, it should meet all of them for merging PR action: check signed off if a pr is not signed off, a robot comment will be update to prompted action: check yaml file issue you could find the reported issue description https://yamllint.readthedocs.io/en/stable/rules.html use following to find the issue on you local machine make lint-yaml notice: for some ignoring case, you could add to .github/yamllint-conf.yml action: go source code check any go file updated, will check it with following: 1 mod dependency updated, golangci-lint, gofmt updated, go vet, use internal lock pkg 2 code quality check, like codeql and gokart 3 build binary 4 unitest and upload coverage to codecov 5 action: lint license 6 each golang test file should mark ginkgo label action: license any go or shell file should be licensed if it belongs to spiderpool, could set it as // Copyright 2022 Authors of spidernet-io // SPDX-License-Identifier: Apache-2.0 action: lint markdown file check markdown file format , spell and best practice. if it fails, the reason could refer to https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md you could test it on local machine with following command make lint-markdown-format you could try to justify it on local machine with following command. For ignoring case, you could add to .github/markdownlint.yaml make fix-markdown-format you could test it on local machine with following command. For ignoring case, you could add it to .github/.spelling make lint-markdown-spell-colour action: lint yaml file check yaml file format and best practice. if it fails, the reason could refer to https://yamllint.readthedocs.io/en/stable/rules.html you could test it on local machine with following command make lint-yaml action: lint chart any update about chart file under '/charts' action: lint openapi.yaml any update about openapi.yaml, will be checked for the yaml validation action: other github APP check from https://www.codefactor.io action: check code spell error check on local machine make lint-code-spell fix on local machine. For ignored case, please edit .github/codespell-ignorewords and make sure all letters should be lower-case make fix-code-spell need review any PR need 2 review, if meet, will auto label it with \"pr/approved\" and \"pr/need-release-label\"","title":"PR Management"},{"location":"contributing/development/pullrequest/#pr-management","text":"after submitting a pull request, the reviewer is assigned by the CODEOWNERS. if a PR lasts stale longer than 60 days, label it with \"pr/stale\" and then close it after 14 days a PR may trigger following workflows, it should meet all of them for merging PR","title":"PR Management"},{"location":"contributing/development/pullrequest/#action-check-signed-off","text":"if a pr is not signed off, a robot comment will be update to prompted","title":"action: check signed off"},{"location":"contributing/development/pullrequest/#action-check-yaml-file-issue","text":"you could find the reported issue description https://yamllint.readthedocs.io/en/stable/rules.html use following to find the issue on you local machine make lint-yaml notice: for some ignoring case, you could add to .github/yamllint-conf.yml","title":"action: check yaml file issue"},{"location":"contributing/development/pullrequest/#action-go-source-code-check","text":"any go file updated, will check it with following: 1 mod dependency updated, golangci-lint, gofmt updated, go vet, use internal lock pkg 2 code quality check, like codeql and gokart 3 build binary 4 unitest and upload coverage to codecov 5 action: lint license 6 each golang test file should mark ginkgo label","title":"action: go source code check"},{"location":"contributing/development/pullrequest/#action-license","text":"any go or shell file should be licensed if it belongs to spiderpool, could set it as // Copyright 2022 Authors of spidernet-io // SPDX-License-Identifier: Apache-2.0","title":"action: license"},{"location":"contributing/development/pullrequest/#action-lint-markdown-file","text":"check markdown file format , spell and best practice. if it fails, the reason could refer to https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md you could test it on local machine with following command make lint-markdown-format you could try to justify it on local machine with following command. For ignoring case, you could add to .github/markdownlint.yaml make fix-markdown-format you could test it on local machine with following command. For ignoring case, you could add it to .github/.spelling make lint-markdown-spell-colour","title":"action: lint markdown file"},{"location":"contributing/development/pullrequest/#action-lint-yaml-file","text":"check yaml file format and best practice. if it fails, the reason could refer to https://yamllint.readthedocs.io/en/stable/rules.html you could test it on local machine with following command make lint-yaml","title":"action: lint yaml file"},{"location":"contributing/development/pullrequest/#action-lint-chart","text":"any update about chart file under '/charts'","title":"action: lint chart"},{"location":"contributing/development/pullrequest/#action-lint-openapiyaml","text":"any update about openapi.yaml, will be checked for the yaml validation","title":"action: lint openapi.yaml"},{"location":"contributing/development/pullrequest/#action-other-github-app","text":"check from https://www.codefactor.io","title":"action: other github APP"},{"location":"contributing/development/pullrequest/#action-check-code-spell-error","text":"check on local machine make lint-code-spell fix on local machine. For ignored case, please edit .github/codespell-ignorewords and make sure all letters should be lower-case make fix-code-spell","title":"action: check code spell error"},{"location":"contributing/development/pullrequest/#need-review","text":"any PR need 2 review, if meet, will auto label it with \"pr/approved\" and \"pr/need-release-label\"","title":"need review"},{"location":"contributing/development/release/","text":"workflow for release if a tag vXX.XX.XX is pushed , the following will auto trigger: 1 build the images with the pushed tag, push to ghcr registry 2 generate the changelog by historical PR with \"pr/release/*\" submit the changelog file to branch 'github_pages', with PR label \"pr/release/robot_update_githubpage\". 3 build the chart package with the pushed tag, and submit a PR to branch 'github_pages' it commits the new chart package to '/charts' and update /index.yaml on the branch 'github_pages' 4 submit '/docs' of branch 'main' to '/docs' of branch 'github_pages' 5 create a GitHub Release attached with the chart and changelog Finally, by hand, need approve the chart PR with label \"pr/release/robot_update_githubpage\" , and changelog PR with label \"pr/release/robot_update_githubpage\"","title":"workflow for release"},{"location":"contributing/development/release/#workflow-for-release","text":"if a tag vXX.XX.XX is pushed , the following will auto trigger:","title":"workflow for release"},{"location":"contributing/development/release/#1-build-the-images-with-the-pushed-tag-push-to-ghcr-registry","text":"","title":"1 build the images with the pushed tag, push to ghcr registry"},{"location":"contributing/development/release/#2-generate-the-changelog-by-historical-pr-with-prrelease","text":"submit the changelog file to branch 'github_pages', with PR label \"pr/release/robot_update_githubpage\".","title":"2 generate the changelog by historical PR with \"pr/release/*\""},{"location":"contributing/development/release/#3-build-the-chart-package-with-the-pushed-tag-and-submit-a-pr-to-branch-github_pages","text":"it commits the new chart package to '/charts' and update /index.yaml on the branch 'github_pages'","title":"3 build the chart package with the pushed tag, and submit a PR to branch 'github_pages'"},{"location":"contributing/development/release/#4-submit-docs-of-branch-main-to-docs-of-branch-github_pages","text":"","title":"4 submit '/docs' of branch 'main' to '/docs' of branch 'github_pages'"},{"location":"contributing/development/release/#5-create-a-github-release-attached-with-the-chart-and-changelog","text":"","title":"5 create a GitHub Release attached with the chart and changelog"},{"location":"contributing/development/release/#finally-by-hand-need-approve-the-chart-pr-with-label-prreleaserobot_update_githubpage-and-changelog-pr-with-label-prreleaserobot_update_githubpage","text":"","title":"Finally, by hand, need approve the chart PR with label \"pr/release/robot_update_githubpage\" , and changelog PR with label \"pr/release/robot_update_githubpage\""},{"location":"contributing/development/roadmap/","text":"spiderpool road map feature [ ] (alpha) a pod use multiple ippools, in case that an ippool is out of use [ ] (alpha) cooperate with macvlan [ ] (alpha) support pod / namespace annotations to customize ip [ ] (alpha) dual stack support. For ipv4-only, ipv6-only, dual-stack cluster, [ ] assign ipv4/ipv6 ip to pod [ ] all component could service on ipv4/ipv6 ip [ ] (alpha) ippool selector [ ] select namespace. Each namespace could occupy non-shared ippool [ ] select pod. For deployment and statefulset case, pod could occupy some ip range [ ] select node. For different zone, pod have specified ip range [ ] (beta) cooperate with multus. multus may call multiple CNI to assign different interface and assign ip [ ] (beta) fixed ip for application, especially for statefulset [ ] (beta) health check [ ] (beta) CLI for debug [ ] (beta) retrieve leaked ip [ ] for graceful timeout of terminating state [ ] for finished job [ ] trigger by hand or automatically [ ] trigger by pod event and happen at interval [ ] (beta) DCE5 integration [ ] (GA) metrics [ ] (GA) reserved ip [ ] (GA) administrator edit ip safely, preventing from race with IPAM CNI, and avoid ip conflicting between ippools [ ] (GA) good performance [ ] take xxx second at most, to assign a ip [ ] take xxx second at most, to assign 1000 ip [ ] (GA) good reliability [ ] (GA) cooperate with spiderflat [ ] Unit-Test [ ] (alpha) 40% coverage at least [ ] (beta) 70% coverage at least [ ] (GA) 90% coverage at least [ ] e2e test [ ] (alpha) 30% coverage for test case of alpha feature [ ] (beta) 80% coverage for test case of beta/alpha feature [ ] (GA) 100% coverage for test case of all feature [ ] (GA) chaos test case, performance test case [ ] All CICD pipeline. nightly ci, auto release chart/image/release, code lint, doc lint, unitest, e2e test [X] (alpha) 80% CICD pipeline [ ] (GA) 100% CICD pipeline [ ] documentation [ ] (alpha) architecture, contributing [ ] (beta) concept, get started, configuration [ ] (GA) command reference goal of April [x] \u7b2c\u4e00\u4e2a Helm Release\uff0c\u53ef\u4ee5\u4e00\u952e\u90e8\u7f72\uff08\u53ef\u6301\u7eed CICD\uff09 [x] \u8f93\u51fa Road Map\uff0c\u5b8c\u6210 6\u4e2a\u6708\u4ee5\u4e0a\u7684\u89c4\u5212 [x] Unit-Test \u8986\u76d6\u7387 10 % [x] \u7b2c\u4e00\u4e2a \u81ea\u52a8\u5316\u7684 e2e \u6d4b\u8bd5\uff08\u6bcf\u5929\u665a\u4e0a\u90fd\u8981\u81ea\u52a8\u8dd1\uff09 [x] OpenSSF(\u5f00\u6e90\u6700\u4f73\u5b9e\u8df5) \u5b8c\u6210\u5ea6 10% [x] GitHub (Star) 100 [x] webhook \u7cbe\u901a\u53ca\u5206\u4eab [ ] go builder \u7684 SDK \u751f\u6210\uff0c\u6240\u6709\u7684 client \u90fd\u80fd\u5de5\u4f5c\uff0c\u751f\u6210 CRD yaml\u3002 \u80fd\u505a\u5230 CI \u81ea\u52a8\u5316 SDK \u6821\u9a8c [x] \u5b8c\u6210 openapi \u63a5\u53e3\u548c SDK \uff0c\u9a8c\u8bc1\u90fd\u80fd\u5de5\u4f5c\u3002\u80fd\u505a\u5230 CI \u81ea\u52a8\u5316 SDK \u6821\u9a8c [x] \u5b8c\u6210 spiderpool ipam plugin \uff0cagent\u3001 controller\u8fdb\u7a0b\u80fd\u591f\u8dd1 \uff0c\u786e\u4fdd helm apply \u80fd\u591f\u90e8\u7f72\uff08\u4e0d\u8981\u6c42\u80fd\u8dd1\u4e1a\u52a1\uff09 [x] \u642d\u5efa e2e \u6846\u67b6 [x] \u7cbe\u8bfb golang\u3001ginkgo\u3001\u5f00\u6e90\u9879\u76ee e2e\uff0c \u4ee5macvlan + whereabout \u5b8c\u6210\u7b2c\u4e00\u4e2ae2e\u6d4b\u8bd5 goal of May [ ] \u5b8c\u6210 IPAM plug in [ ] \u5b8c\u6210 Agent \u4e3b\u8981\u4ee3\u7801\uff0c\u80fd\u5206\u914d\u51fa ipv4/ipv6 \u5730\u5740 [ ] \u4ee5 macvlan + whereabout \u4e3a\u65b9\u6848\uff0c\u5b8c\u6210 50% alpha feature \u7684 E2E \u7528\u4f8b [ ] \u5b8c\u6210 100% alpha doc [ ] OpenSSF(\u5f00\u6e90\u6700\u4f73\u5b9e\u8df5) \u5b8c\u6210\u5ea6 100% [ ] 5 \u4e2a\u5916\u90e8\u53cd\u9988\u7528\u6237\uff0c10\u4e2a ISSUE ????? [ ] 3\u4e2a\u5916\u90e8\u8d21\u732e\u8005 ???? [ ] GitHub (Star) 200 ??? [ ] Unit-Test \u8986\u76d6\u7387 30% [ ] \u5f00\u653e\u7684 \u72ec\u7acb\u7f51\u7ad9 \u548c \u4e0b\u8f7d\uff0c\u53cd\u9988\u3002 ???? [ ] \u5f00\u53d1\u7684 \u72ec\u7acb\u7f51\u7ad9 QuickStart\uff0c \u4e0b\u8f7d\uff0c\u53cd\u9988\u3002 ??? [ ] Spider Pool e2e \u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1 (\u5305\u62ec \u81ea\u52a8\u5347\u7ea7\uff0c\u6027\u80fd\uff0c\u53ef\u9760\u6027\uff0c\u8001\u5316) \u7ed3\u5408\u57fa\u7ebf \u548c\u8fc7\u5f80\u7684 L3 \u4e8b\u6545\u3002(\u8bc4\u5ba1\u4f1a\u4e4b\u524d\uff0c\u5f00\u4f1areview) [ ] \u5145\u5206\u7684 e2e \u6d4b\u8bd5 \u8bbe\u8ba1(\u5305\u62ec \u81ea\u52a8\u5347\u7ea7\uff0c\u6027\u80fd\uff0c\u53ef\u9760\u6027\uff0c\u8001\u5316) \u7ed3\u5408\u57fa\u7ebf \u548c\u8fc7\u5f80\u7684 L3 \u4e8b\u6545 ?? goal of June [ ] \u5b8c\u6210\u6240\u6709\u6ee1\u8db3 alpha feature \u7684\u4e1a\u52a1\u4ee3\u7801 [ ] \u4ee5 macvlan + spiderpool \u4e3a\u65b9\u6848\uff0c\u5b8c\u6210 100% alpha feature \u7684 E2E \u7528\u4f8b [ ] \u6536\u96c6 10\u4e2a\u4ee5\u4e0a alpha \u7528\u6237\u7684\u53cd\u9988\uff0c\u5e76\u89e3\u51b3\u5176\u53cd\u9988\u7684\u95ee\u9898(\u521a\u6027) [ ] Unit-Test \u8986\u76d6\u7387 80% [ ] \u6027\u80fd\u6d4b\u8bd5\uff0c\u53ef\u9760\u6027\u6d4b\u8bd5\uff0c??? [ ] \u5145\u5206\u7684\u707e\u96be\u573a\u666f\u6d4b\u8bd5\u3002\u548c \u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5 ?? [ ] \u517c\u5bb9\u6027\u6d4b\u8bd5\u9a8c\u8bc1\uff08\u6d89\u53ca\u7684\u5f00\u6e90\u8f6f\u4ef6\uff1a\u7b2c\u4e94\u4ee3\u4ea7\u54c1\u5f00\u6e90\u9879\u76ee \u548c\u5404\u4e2a\u516c\u6709\u4e91\u73af\u5883\uff09 [ ] \u5ba1\u89c6\u201cL3\u4e8b\u6545\u201d\uff0c\u786e\u8ba4\u4e0d\u4f1a\u51fa\u73b0\u4e4b\u524d\u53d1\u751f\u8fc7\u7684\u4e8b\u6545 [ ] \u707e\u96be\u6062\u590d\u6f14\u7ec3 ?? beta [ ] \u5b8c\u6210 \u548c KubeGrid \u7684 \u4f1a\u5e08 ?? beta [ ] \u89e3\u51b3\u6240\u6709\u91cd\u5927bug [ ] \u5408\u4f5c\u4f19\u4f34 1 \u4e2a\uff0c\u53cd\u9988\u7528\u6237 1\u4e2a goal of July [ ] \u5b8c\u6210\u6240\u6709\u6ee1\u8db3 beta feature \u7684\u4ee3\u7801 [ ] \u5b8c\u6210 100% beta doc goal of August [ ] finish most of GA feature , wait for spiderflat ready to debug [ ] \u6536\u96c6 10 \u4e2a\u4ee5\u4e0a beta \u7528\u6237\u7684\u53cd\u9988\uff0c\u5e76\u89e3\u51b3\u5176\u53cd\u9988\u7684\u95ee\u9898(\u521a\u6027) [ ] \u5c06\u6240\u6709\u5df2\u77e5 BUG \u89e3\u51b3 [ ] OpenSSF(\u5f00\u6e90\u6700\u4f73\u5b9e\u8df5) \u5b8c\u6210\u5ea6 100 % goal of September [ ] start spiderflat","title":"spiderpool road map"},{"location":"contributing/development/roadmap/#spiderpool-road-map","text":"","title":"spiderpool road map"},{"location":"contributing/development/roadmap/#feature","text":"[ ] (alpha) a pod use multiple ippools, in case that an ippool is out of use [ ] (alpha) cooperate with macvlan [ ] (alpha) support pod / namespace annotations to customize ip [ ] (alpha) dual stack support. For ipv4-only, ipv6-only, dual-stack cluster, [ ] assign ipv4/ipv6 ip to pod [ ] all component could service on ipv4/ipv6 ip [ ] (alpha) ippool selector [ ] select namespace. Each namespace could occupy non-shared ippool [ ] select pod. For deployment and statefulset case, pod could occupy some ip range [ ] select node. For different zone, pod have specified ip range [ ] (beta) cooperate with multus. multus may call multiple CNI to assign different interface and assign ip [ ] (beta) fixed ip for application, especially for statefulset [ ] (beta) health check [ ] (beta) CLI for debug [ ] (beta) retrieve leaked ip [ ] for graceful timeout of terminating state [ ] for finished job [ ] trigger by hand or automatically [ ] trigger by pod event and happen at interval [ ] (beta) DCE5 integration [ ] (GA) metrics [ ] (GA) reserved ip [ ] (GA) administrator edit ip safely, preventing from race with IPAM CNI, and avoid ip conflicting between ippools [ ] (GA) good performance [ ] take xxx second at most, to assign a ip [ ] take xxx second at most, to assign 1000 ip [ ] (GA) good reliability [ ] (GA) cooperate with spiderflat [ ] Unit-Test [ ] (alpha) 40% coverage at least [ ] (beta) 70% coverage at least [ ] (GA) 90% coverage at least [ ] e2e test [ ] (alpha) 30% coverage for test case of alpha feature [ ] (beta) 80% coverage for test case of beta/alpha feature [ ] (GA) 100% coverage for test case of all feature [ ] (GA) chaos test case, performance test case [ ] All CICD pipeline. nightly ci, auto release chart/image/release, code lint, doc lint, unitest, e2e test [X] (alpha) 80% CICD pipeline [ ] (GA) 100% CICD pipeline [ ] documentation [ ] (alpha) architecture, contributing [ ] (beta) concept, get started, configuration [ ] (GA) command reference","title":"feature"},{"location":"contributing/development/roadmap/#goal-of-april","text":"[x] \u7b2c\u4e00\u4e2a Helm Release\uff0c\u53ef\u4ee5\u4e00\u952e\u90e8\u7f72\uff08\u53ef\u6301\u7eed CICD\uff09 [x] \u8f93\u51fa Road Map\uff0c\u5b8c\u6210 6\u4e2a\u6708\u4ee5\u4e0a\u7684\u89c4\u5212 [x] Unit-Test \u8986\u76d6\u7387 10 % [x] \u7b2c\u4e00\u4e2a \u81ea\u52a8\u5316\u7684 e2e \u6d4b\u8bd5\uff08\u6bcf\u5929\u665a\u4e0a\u90fd\u8981\u81ea\u52a8\u8dd1\uff09 [x] OpenSSF(\u5f00\u6e90\u6700\u4f73\u5b9e\u8df5) \u5b8c\u6210\u5ea6 10% [x] GitHub (Star) 100 [x] webhook \u7cbe\u901a\u53ca\u5206\u4eab [ ] go builder \u7684 SDK \u751f\u6210\uff0c\u6240\u6709\u7684 client \u90fd\u80fd\u5de5\u4f5c\uff0c\u751f\u6210 CRD yaml\u3002 \u80fd\u505a\u5230 CI \u81ea\u52a8\u5316 SDK \u6821\u9a8c [x] \u5b8c\u6210 openapi \u63a5\u53e3\u548c SDK \uff0c\u9a8c\u8bc1\u90fd\u80fd\u5de5\u4f5c\u3002\u80fd\u505a\u5230 CI \u81ea\u52a8\u5316 SDK \u6821\u9a8c [x] \u5b8c\u6210 spiderpool ipam plugin \uff0cagent\u3001 controller\u8fdb\u7a0b\u80fd\u591f\u8dd1 \uff0c\u786e\u4fdd helm apply \u80fd\u591f\u90e8\u7f72\uff08\u4e0d\u8981\u6c42\u80fd\u8dd1\u4e1a\u52a1\uff09 [x] \u642d\u5efa e2e \u6846\u67b6 [x] \u7cbe\u8bfb golang\u3001ginkgo\u3001\u5f00\u6e90\u9879\u76ee e2e\uff0c \u4ee5macvlan + whereabout \u5b8c\u6210\u7b2c\u4e00\u4e2ae2e\u6d4b\u8bd5","title":"goal of April"},{"location":"contributing/development/roadmap/#goal-of-may","text":"[ ] \u5b8c\u6210 IPAM plug in [ ] \u5b8c\u6210 Agent \u4e3b\u8981\u4ee3\u7801\uff0c\u80fd\u5206\u914d\u51fa ipv4/ipv6 \u5730\u5740 [ ] \u4ee5 macvlan + whereabout \u4e3a\u65b9\u6848\uff0c\u5b8c\u6210 50% alpha feature \u7684 E2E \u7528\u4f8b [ ] \u5b8c\u6210 100% alpha doc [ ] OpenSSF(\u5f00\u6e90\u6700\u4f73\u5b9e\u8df5) \u5b8c\u6210\u5ea6 100% [ ] 5 \u4e2a\u5916\u90e8\u53cd\u9988\u7528\u6237\uff0c10\u4e2a ISSUE ????? [ ] 3\u4e2a\u5916\u90e8\u8d21\u732e\u8005 ???? [ ] GitHub (Star) 200 ??? [ ] Unit-Test \u8986\u76d6\u7387 30% [ ] \u5f00\u653e\u7684 \u72ec\u7acb\u7f51\u7ad9 \u548c \u4e0b\u8f7d\uff0c\u53cd\u9988\u3002 ???? [ ] \u5f00\u53d1\u7684 \u72ec\u7acb\u7f51\u7ad9 QuickStart\uff0c \u4e0b\u8f7d\uff0c\u53cd\u9988\u3002 ??? [ ] Spider Pool e2e \u6d4b\u8bd5\u7528\u4f8b\u8bbe\u8ba1 (\u5305\u62ec \u81ea\u52a8\u5347\u7ea7\uff0c\u6027\u80fd\uff0c\u53ef\u9760\u6027\uff0c\u8001\u5316) \u7ed3\u5408\u57fa\u7ebf \u548c\u8fc7\u5f80\u7684 L3 \u4e8b\u6545\u3002(\u8bc4\u5ba1\u4f1a\u4e4b\u524d\uff0c\u5f00\u4f1areview) [ ] \u5145\u5206\u7684 e2e \u6d4b\u8bd5 \u8bbe\u8ba1(\u5305\u62ec \u81ea\u52a8\u5347\u7ea7\uff0c\u6027\u80fd\uff0c\u53ef\u9760\u6027\uff0c\u8001\u5316) \u7ed3\u5408\u57fa\u7ebf \u548c\u8fc7\u5f80\u7684 L3 \u4e8b\u6545 ??","title":"goal of May"},{"location":"contributing/development/roadmap/#goal-of-june","text":"[ ] \u5b8c\u6210\u6240\u6709\u6ee1\u8db3 alpha feature \u7684\u4e1a\u52a1\u4ee3\u7801 [ ] \u4ee5 macvlan + spiderpool \u4e3a\u65b9\u6848\uff0c\u5b8c\u6210 100% alpha feature \u7684 E2E \u7528\u4f8b [ ] \u6536\u96c6 10\u4e2a\u4ee5\u4e0a alpha \u7528\u6237\u7684\u53cd\u9988\uff0c\u5e76\u89e3\u51b3\u5176\u53cd\u9988\u7684\u95ee\u9898(\u521a\u6027) [ ] Unit-Test \u8986\u76d6\u7387 80% [ ] \u6027\u80fd\u6d4b\u8bd5\uff0c\u53ef\u9760\u6027\u6d4b\u8bd5\uff0c??? [ ] \u5145\u5206\u7684\u707e\u96be\u573a\u666f\u6d4b\u8bd5\u3002\u548c \u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5 ?? [ ] \u517c\u5bb9\u6027\u6d4b\u8bd5\u9a8c\u8bc1\uff08\u6d89\u53ca\u7684\u5f00\u6e90\u8f6f\u4ef6\uff1a\u7b2c\u4e94\u4ee3\u4ea7\u54c1\u5f00\u6e90\u9879\u76ee \u548c\u5404\u4e2a\u516c\u6709\u4e91\u73af\u5883\uff09 [ ] \u5ba1\u89c6\u201cL3\u4e8b\u6545\u201d\uff0c\u786e\u8ba4\u4e0d\u4f1a\u51fa\u73b0\u4e4b\u524d\u53d1\u751f\u8fc7\u7684\u4e8b\u6545 [ ] \u707e\u96be\u6062\u590d\u6f14\u7ec3 ?? beta [ ] \u5b8c\u6210 \u548c KubeGrid \u7684 \u4f1a\u5e08 ?? beta [ ] \u89e3\u51b3\u6240\u6709\u91cd\u5927bug [ ] \u5408\u4f5c\u4f19\u4f34 1 \u4e2a\uff0c\u53cd\u9988\u7528\u6237 1\u4e2a","title":"goal of June"},{"location":"contributing/development/roadmap/#goal-of-july","text":"[ ] \u5b8c\u6210\u6240\u6709\u6ee1\u8db3 beta feature \u7684\u4ee3\u7801 [ ] \u5b8c\u6210 100% beta doc","title":"goal of July"},{"location":"contributing/development/roadmap/#goal-of-august","text":"[ ] finish most of GA feature , wait for spiderflat ready to debug [ ] \u6536\u96c6 10 \u4e2a\u4ee5\u4e0a beta \u7528\u6237\u7684\u53cd\u9988\uff0c\u5e76\u89e3\u51b3\u5176\u53cd\u9988\u7684\u95ee\u9898(\u521a\u6027) [ ] \u5c06\u6240\u6709\u5df2\u77e5 BUG \u89e3\u51b3 [ ] OpenSSF(\u5f00\u6e90\u6700\u4f73\u5b9e\u8df5) \u5b8c\u6210\u5ea6 100 %","title":"goal of August"},{"location":"contributing/development/roadmap/#goal-of-september","text":"[ ] start spiderflat","title":"goal of September"},{"location":"contributing/development/swagger_openapi/","text":"SWAGGER OPENAPI Spiderpool uses go-swagger to generate open api source codes. There are two swagger yaml for 'agent' and 'controller'. Please check with agent-swagger spec and controller-swagger spec . source codes. Features Validate spec Generate C/S codes Verify spec with current source codes Clean codes Use swagger-ui to analyze the given specs. Usages There are two ways for you to get access to the features. Use makefile , it's the simplest way. Use shell swag.sh . The format usage for 'swag.sh' is swag.sh $ACTION $SPEC_DIR . validate spec Validate the current spec just give the second parameter with the spec directory. ./tools/scripts/swag.sh validate ./api/v1/agent Or you can use makefile to validate the spiderpool agent and controller with the following command. make openapi-validate-spec generate source codes with the given spec To generate agent source codes: ./tools/scripts/swag.sh generate ./api/v1/agent Or you can use makefile to generate for both of agent and controller two: make openapi-code-gen verify the spec with current source codes to make sure whether the current source codes is out of date To verify the given spec whether valid or not: ./tools/scripts/swag.sh verify ./api/v1/agent Or you can use makefile to verify for both of agent and controller two: make openapi-verify clean the generated source codes To clean the generated agent codes: ./tools/scripts/swag.sh verify ./api/v1/agent Or you can use makefile to clean for both of agent and controller two: make clean-openapi-code Use swagger-ui To analyze the defined specs in your local environment with docker: make openapi-ui Then you can visit the web with port 8080. Switch the yaml with './agent-swagger.yaml' and './controller-swagger.yaml' in the web. Steps For Developers Modify the specs: agent-swagger spec and controller-swagger spec Validate the modified specs Use swagger-ui to check the effects in your local environment with docker Re-generate the source codes with the modified specs Commit your PR.","title":"SWAGGER OPENAPI"},{"location":"contributing/development/swagger_openapi/#swagger-openapi","text":"Spiderpool uses go-swagger to generate open api source codes. There are two swagger yaml for 'agent' and 'controller'. Please check with agent-swagger spec and controller-swagger spec . source codes.","title":"SWAGGER OPENAPI"},{"location":"contributing/development/swagger_openapi/#features","text":"Validate spec Generate C/S codes Verify spec with current source codes Clean codes Use swagger-ui to analyze the given specs.","title":"Features"},{"location":"contributing/development/swagger_openapi/#usages","text":"There are two ways for you to get access to the features. Use makefile , it's the simplest way. Use shell swag.sh . The format usage for 'swag.sh' is swag.sh $ACTION $SPEC_DIR .","title":"Usages"},{"location":"contributing/development/swagger_openapi/#validate-spec","text":"Validate the current spec just give the second parameter with the spec directory. ./tools/scripts/swag.sh validate ./api/v1/agent Or you can use makefile to validate the spiderpool agent and controller with the following command. make openapi-validate-spec","title":"validate spec"},{"location":"contributing/development/swagger_openapi/#generate-source-codes-with-the-given-spec","text":"To generate agent source codes: ./tools/scripts/swag.sh generate ./api/v1/agent Or you can use makefile to generate for both of agent and controller two: make openapi-code-gen","title":"generate source codes with the given spec"},{"location":"contributing/development/swagger_openapi/#verify-the-spec-with-current-source-codes-to-make-sure-whether-the-current-source-codes-is-out-of-date","text":"To verify the given spec whether valid or not: ./tools/scripts/swag.sh verify ./api/v1/agent Or you can use makefile to verify for both of agent and controller two: make openapi-verify","title":"verify the spec with current source codes to make sure whether the current source codes is out of date"},{"location":"contributing/development/swagger_openapi/#clean-the-generated-source-codes","text":"To clean the generated agent codes: ./tools/scripts/swag.sh verify ./api/v1/agent Or you can use makefile to clean for both of agent and controller two: make clean-openapi-code","title":"clean the generated source codes"},{"location":"contributing/development/swagger_openapi/#use-swagger-ui","text":"To analyze the defined specs in your local environment with docker: make openapi-ui Then you can visit the web with port 8080. Switch the yaml with './agent-swagger.yaml' and './controller-swagger.yaml' in the web.","title":"Use swagger-ui"},{"location":"contributing/development/swagger_openapi/#steps-for-developers","text":"Modify the specs: agent-swagger spec and controller-swagger spec Validate the modified specs Use swagger-ui to check the effects in your local environment with docker Re-generate the source codes with the modified specs Commit your PR.","title":"Steps For Developers"},{"location":"contributing/development/test/","text":"e2e test check required tools, if miss something, you could run 'test/scripts/install-tools.sh' to install them # make dev-doctor go version go1.17 linux/amd64 check e2e tools pass 'docker' installed pass 'kubectl' installed pass 'kind' installed pass 'p2ctl' installed finish checking e2e tools run the e2e # make e2e if your first run it, it will download some images, you could set the http proxy for it # ADDR=10.6.0.1 # export https_proxy=http://${ADDR}:7890 http_proxy=http://${ADDR}:7890 # make e2e could run specified case # make e2e -e E2E_GINKGO_LABELS=\"lable1,label2\" for developing e2e case, could do it step by step # make e2e_init ....... ----------------------------------------------------------------------------------------------------- succeeded to setup cluster spider you could use following command to access the cluster export KUBECONFIG=/root/git/spiderpool/test/.cluster/spider/.kube/config kubectl get nodes ----------------------------------------------------------------------------------------------------- # make e2e_test # ls e2ereport.json # make clean_e2e","title":"e2e test"},{"location":"contributing/development/test/#e2e-test","text":"check required tools, if miss something, you could run 'test/scripts/install-tools.sh' to install them # make dev-doctor go version go1.17 linux/amd64 check e2e tools pass 'docker' installed pass 'kubectl' installed pass 'kind' installed pass 'p2ctl' installed finish checking e2e tools run the e2e # make e2e if your first run it, it will download some images, you could set the http proxy for it # ADDR=10.6.0.1 # export https_proxy=http://${ADDR}:7890 http_proxy=http://${ADDR}:7890 # make e2e could run specified case # make e2e -e E2E_GINKGO_LABELS=\"lable1,label2\" for developing e2e case, could do it step by step # make e2e_init ....... ----------------------------------------------------------------------------------------------------- succeeded to setup cluster spider you could use following command to access the cluster export KUBECONFIG=/root/git/spiderpool/test/.cluster/spider/.kube/config kubectl get nodes ----------------------------------------------------------------------------------------------------- # make e2e_test # ls e2ereport.json # make clean_e2e","title":"e2e test"}]}